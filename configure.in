dnl Process this file with autoconf to produce a configure script.
AC_INIT(configure.in)
AM_INIT_AUTOMAKE(netbiff, 0.9.11)
AM_CONFIG_HEADER(config.h)

dnl Make sure we have a working compiler.
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

dnl Turn on -Wall for gcc
if test "x$GCC" = "xyes"; then
  if test -z "`echo "$CFLAGS" | grep "\-Wall" 2>/dev/null`"; then
    CFLAGS="$CFLAGS -Wall"
  fi
fi

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LN_S

AC_PROG_YACC
AM_PROG_LEX

dnl Checks for header files.
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(getopt.h malloc.h sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(getopt_long select socket strdup strerror strtoul)

AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(xnet, gethostbyname)
AC_CHECK_LIB(resolv, inet_aton)

AC_CHECK_FUNCS(hstrerror)

dnl Include the text frontend? 
dnl Default to yes.
AC_MSG_CHECKING(--enable-text argument)
AC_ARG_ENABLE(text, 
  [  --enable-text           Include support for text (stdio) interface],,
  [enable_text=yes])
AC_MSG_RESULT($enable_text)
if test "$enable_text" = "yes"; then
  AC_DEFINE(GUI_TEXT)
fi

dnl Include the gtk frontend? Defaults to yes.
AC_MSG_CHECKING(--enable-gtk argument)
AC_ARG_ENABLE(gtk, 
  [  --enable-gtk            Include support for GTK interface],,
  [enable_gtk=yes])
AC_MSG_RESULT($enable_gtk)
if test "$enable_gtk" = "yes"; then
  PKG_CHECK_MODULES(GTK, gtk+-2.0)
  AC_DEFINE(GUI_GTK)
fi

AC_MSG_CHECKING(--with-ssl argument)
AC_ARG_WITH(ssl, 
  [  --with-ssl              Support SSL/TLS on backed (requires openssl >= 0.9.6)],
  [ 
    with_ssl=yes 
    AC_DEFINE(USE_SSL)
  ],
  [ with_ssl=no  ])
AC_MSG_RESULT([$with_ssl])
if test "$with_ssl" = "yes"; then
  AC_CHECK_LIB(crypto, BIO_vprintf,
    [ LIBSSL="$LIBSSL -lcrypto" ],
    AC_MSG_ERROR(Require libcrypto (>= 0.9.6) to build --with-ssl))
  AC_CHECK_LIB(ssl, SSL_new,
    [ LIBSSL="-lssl $LIBSSL" ],
    AC_MSG_ERROR(Require libssl to build --with-ssl),
    [ -lcrypto ])
  AC_SUBST(LIBSSL)
fi

AC_OUTPUT(netbiff/Makefile backend/Makefile Makefile netbiff.spec)
